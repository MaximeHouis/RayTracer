#!/bin/bash -e

# MINGW64_NT-???, Darwin, Linux
OS=$(uname)

if [[ $UID == 0 ]]; then
  echo "Script must not be run as root"
  exit 1
fi

if [[ $# != 1 && $# != 2 ]]; then
  echo "usage: $0 (Debug/Release/...) [-Werror]"
  exit 1
fi

if [[ $2 == "-Werror" ]]; then
  RAYTRACER_ERROR="-DRAYTRACER_ERROR=1"
else
  RAYTRACER_ERROR=""
fi

if [[ $1 == "Tests" ]]; then
  RAYTRACER_TESTS="-DRAYTRACER_TESTS=1"
else
  RAYTRACER_TESTS=""
fi

case "$OS" in
"Linux" | "Darwin")
  OS_PYTHON="sudo -H python3"
  ;;
*)
  OS_PYTHON="python"
  ;;
esac

# Add git submodules (from .gitmodules)
echo "== Fetching submodules"
git submodule update --init --recursive

echo "== Installing pip dependencies"
eval $OS_PYTHON -m pip install -r requirements.txt >/dev/null

echo "== Setting up OS specific configuration"
if [[ $(uname -a) =~ "Ubuntu" ]]; then
  # GitHub Actions uses Ubuntu, needs gcc>=8
  export CC="gcc-8"
  export CXX="g++-8"

  sudo add-apt-repository ppa:snaipewastaken/ppa
  sudo apt update
  sudo apt install -y criterion-dev libasound2-dev mesa-common-dev libx11-dev libxrandr-dev libxi-dev xorg-dev libgl1-mesa-dev libglu1-mesa-dev
elif [[ $(uname -a) =~ "Darwin" ]]; then
  brew install snaipe/soft/criterion
elif [[ $(uname -a) =~ "MINGW64_NT" ]]; then
  cd Dependencies/Criterion
  meson build
  ninja -C build
  cd -
fi

# Create/Reload build directory
echo "== Creating build environement"
rm -rf build
mkdir -p build
cd build

echo "== Running CMake"
case "$OS" in
"Linux" | "Darwin")
  cmake -DCMAKE_BUILD_TYPE="$1" $RAYTRACER_TESTS $RAYTRACER_ERROR ..
  ;;
*)
  cmake -DCMAKE_BUILD_TYPE="$1" $RAYTRACER_TESTS $RAYTRACER_ERROR -A x64 ..
  ;;
esac

echo "== Build mode: $1"
